{"version":3,"sources":["images/bart.png","images/bart2.png","images/daly.png","images/donut.png","images/flanders.png","images/homero.png","images/homero2.png","images/irish.png","images/lisa.png","images/lisa2.png","images/maggie.png","images/march.png","components/Navbar/Navbar.js","components/Character/Character.js","components/Container/Container.js","components/Jumbotron/Jumbotron.js","components/Footer/Footer.js","images.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Character","onClick","e","clickEvent","target","src","name","alt","Container","shake","characters","map","i","components_Character_Character","key","Jumbotron","score","highScore","Footer","images","bart","bart2","daly","donut","flanders","homero","homero2","irish","lisa","lisa2","maggie","march","App","state","navMsgColor","navMessage","allCharacters","_this","shuffleArray","wasClicked","checkClicked","bind","Object","assertThisInitialized","newArr","slice","shuffleArr","length","push","splice","Math","floor","random","clickedElem","_this2","this","prevState","shuffled","includes","setState","setTimeout","components_Navbar_Navbar","components_Jumbotron_Jumbotron","navMsgCoxwlor","components_Container_Container","components_Footer_Footer","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e2faeb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bart.fead4fe2.png\";","module.exports = __webpack_public_path__ + \"static/media/bart2.ce2f45a9.png\";","module.exports = __webpack_public_path__ + \"static/media/daly.f6d40772.png\";","module.exports = __webpack_public_path__ + \"static/media/donut.28f3261b.png\";","module.exports = __webpack_public_path__ + \"static/media/flanders.a1daf275.png\";","module.exports = __webpack_public_path__ + \"static/media/homero.3cac2ab8.png\";","module.exports = __webpack_public_path__ + \"static/media/homero2.57623cf3.png\";","module.exports = __webpack_public_path__ + \"static/media/irish.58824e6d.png\";","module.exports = __webpack_public_path__ + \"static/media/lisa.cca416ec.png\";","module.exports = __webpack_public_path__ + \"static/media/lisa2.5767c0fd.png\";","module.exports = __webpack_public_path__ + \"static/media/maggie.b5c08ce0.png\";","module.exports = __webpack_public_path__ + \"static/media/march.efea4473.png\";","import React from 'react';\nimport './styleNav.css';\n\nconst Navbar = props => (\n    <nav className=\"navbar navbar-expand-lg navbar-light\" >\n      <a className=\"navbar-brand\" href=\"index.js\">\n        Clicky Game\n      </a>\n\n      <button\n        className=\"navbar-toggler\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <h3>  Click an image to begin! </h3>\n      </div>\n    </nav>\n  );\n\nexport default Navbar;\n","\nimport React from 'react';\nimport './style.css';\n\n\nconst Character = props => (\n  <div className=\"card\" onClick={e => props.clickEvent(e.target.src)}>\n    <img className=\"card-img-top card-height\" src={props.name} alt=\"pitures\" />\n  </div>\n);\n\nexport default Character;","import React from 'react';\nimport './style.css';\nimport Character from \"../Character/Character\";\n\nconst Container = props => (\n  // loops through\n  <div\n    className={\n      props.shake\n        ? 'container d-flex flex-wrap justify-content-center'\n        : 'container d-flex flex-wrap justify-content-center'\n    }\n  >\n    {props.characters.map((a, i) => <Character name={a} key={i} clickEvent={props.clickEvent} />)}\n  </div>\n);\n\nexport default Container;","import React from 'react';\nimport './jumbotron.css';\n\nconst Jumbotron = props => (\n    <div className=\"jumbotron\">\n      <h1>Clicky Game!</h1>\n      <p>\n        Click on an image to earn points, but don't click on any more than once!\n      </p>\n              Score: {props.score} <span className=\"pipe\">|</span> High Score: {props.highScore}\n    </div>\n  );\n\n\nexport default Jumbotron;\n","import React from 'react';\nimport './footer.css';\n\nconst Footer = () => <div id=\"mainfooter\" className=\"footer text-center\"> Clicky Game by Ronald Cubillo</div>;\n\nexport default Footer;","//Importing all the images.\nimport bart from './images/bart.png';\nimport bart2 from './images/bart2.png';\nimport daly from './images/daly.png';\nimport donut from './images/donut.png';\nimport flanders from './images/flanders.png';\nimport homero from './images/homero.png';\nimport homero2 from './images/homero2.png';\nimport irish from './images/irish.png';\nimport lisa from './images/lisa.png';\nimport lisa2 from './images/lisa2.png';\nimport maggie from './images/maggie.png';\nimport march from './images/march.png';\n\n//Here I have an array with all the images\nconst images = [\n  bart,\n  bart2,\n  daly,\n  donut,\n  flanders,\n  homero,\n  homero2,\n  irish,\n  lisa,\n  lisa2,\n  maggie,\n  march\n];\n\nexport default images;\n","import React, { Component } from 'react';\nimport Navbar from './Navbar/Navbar';\nimport Container from './Container';\nimport Jumbotron from './Jumbotron/Jumbotron';\nimport Footer from './Footer/Footer';\nimport images from '../images';\n\nclass App extends Component {\n  state = {\n    score: 0,\n    highScore: 0,\n\n    // stores the class value to assign to navMessage based on a good or bad click\n    navMsgColor: '',\n\n    // contains intro, success, and failure message\n    navMessage: 'Click an image to begin!',\n\n    // contains an array of image urls\n    allCharacters: this.shuffleArray(),\n\n    // will track  each clicked element.\n    wasClicked: [],\n  };\n\n  // binds the current this context to checkClicked to have access to the current state\n  clickEvent = this.checkClicked.bind(this);\n\n  // used to shuffle the array of images when the DOM loads, and when an image is clicked\n  shuffleArray() {\n    // creates a copy of the current characters array to modify it by value, and not by reference\n    const newArr = images.slice();\n\n    // will store the shuffled array\n    const shuffleArr = [];\n\n    // each loop through an index gets spliced from newArr, reducing its length\n    while (newArr.length > 0) {\n      shuffleArr.push(newArr.splice(Math.floor(Math.random() * newArr.length), 1)[0]);\n    }\n\n    return shuffleArr;\n  }\n\n  checkClicked(clickedElem) {\n    // creates a copy of the wasClicked array to modify it by value, and not by reference. wasClicked stores all previous clicked images\n    const prevState = this.state.wasClicked.slice();\n\n    // shuffles the images\n    const shuffled = this.shuffleArray();\n\n    // tracks score\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n\n    // if the clicked item is not in wasClicked, then it hasn't been clicked and the score is increased\n    if (!this.state.wasClicked.includes(clickedElem)) {\n      // if score and highScore are the same, then there is a new highScore value\n      if (score === highScore) {\n        score++;\n        highScore++;\n\n        // if they are not equal, then only increase the score value\n      } else {\n        score++;\n      }\n\n      // adds the clicked item to wasClicked to track that it has been clicked\n      prevState.push(clickedElem);\n    }\n\n    // resets the current score\n    if (this.state.wasClicked.includes(clickedElem)) {\n      let score = 0;\n      return this.setState({\n        score: score,\n        highScore: highScore,\n        navMsgColor: 'incorrect',\n        navMessage: 'Incorrect guess!',\n        allCharacters: shuffled,\n        wasClicked: [],\n      });\n    }\n\n    // if this runs, then the same element has not been clicked twice and the score is increased\n    this.setState({\n      score: score,\n      highScore: highScore,\n      navMsgColor: 'correct',\n      navMessage: 'You Guessed Correctly!',\n      allCharacters: shuffled,\n      wasClicked: prevState,\n    });\n\n    // removes the green correct indicator on a successful click after .5s to re-render the class on each success\n    return setTimeout(() => this.setState({ navMsgColor: '' }), 500);\n  }\n\n  // renders score to the navbar.\n  render() {\n    const state = this.state;\n    return (\n      <div>\n        <Navbar/>\n         <Jumbotron\n          score={state.score}\n          highScore={state.highScore}\n          navMessage={state.navMessage}\n          navMsgColor={state.navMsgCoxwlor}\n          />\n        <Container\n          characters={state.allCharacters}\n          clickEvent={this.clickEvent}\n        />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}